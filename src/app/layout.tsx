// "use client";

// import { useState, useEffect } from "react";
// import type { Metadata } from "next";
// import { Geist, Geist_Mono } from "next/font/google";
// import "./globals.css";

// const geistSans = Geist({
//   variable: "--font-geist-sans",
//   subsets: ["latin"],
// });

// const geistMono = Geist_Mono({
//   variable: "--font-geist-mono",
//   subsets: ["latin"],
// });

// export const metadata: Metadata = {
//   title: "Create Next App",
//   description: "Generated by create next app",
// };

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) {
//   const [theme, setTheme] = useState<"light" | "dark">("light");

//   // При першому рендері читаємо системну тему або локальне збереження
//   useEffect(() => {
//     if (typeof window !== "undefined") {
//       const savedTheme = localStorage.getItem("theme") as
//         | "light"
//         | "dark"
//         | null;
//       if (savedTheme) {
//         setTheme(savedTheme);
//       } else {
//         const prefersDark = window.matchMedia(
//           "(prefers-color-scheme: dark)"
//         ).matches;
//         setTheme(prefersDark ? "dark" : "light");
//       }
//     }
//   }, []);

//   // Застосовуємо атрибут data-theme на html
//   useEffect(() => {
//     if (typeof window !== "undefined") {
//       document.documentElement.setAttribute("data-theme", theme);
//       localStorage.setItem("theme", theme);
//     }
//   }, [theme]);

//   return (
//     <html lang="en">
//       <body
//         className={`${geistSans.variable} ${geistMono.variable} antialiased
//         //  dark
//          `}
//       >
//         <button
//           onClick={() => setTheme(theme === "light" ? "dark" : "light")}
//           className="fixed top-4 right-4 px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition"
//           aria-label="Перемкнути тему"
//         >
//           {theme === "light" ? "Темна тема" : "Світла тема"}
//         </button>
//         {children}
//       </body>
//     </html>
//   );
// }

import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import ThemeProvider from "../components/ThemeProvider";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: {
  children: React.ReactNode;
}) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThemeProvider>{children}</ThemeProvider>
      </body>
    </html>
  );
}
